------------------------ Compte USER : -----------------------------


CREATE TABLE COMPTE_UTILISATEUR 
(
   IdUSER INT PRIMARY KEY,
   COUtRESERV DECIMAL,
   SOMMeMATERIElABIME DECIMAL,
   SOMMeREMBOURSEE DECIMAL
);


INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (1); 
INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (2); 
INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (3); 
INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (4); 
INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (5); 
INSERT INTO COMPTE_UTILISATEUR(IdUSER) VALUES (6); 

SELECT * FROM COMPTE_UTILISATEUR  ORDER BY Iduser ; 


CREATE TABLE MEMBRE (
   EMAIlMEMBRE VARCHAR(50) PRIMARY KEY,
   MDP VARCHAR(20),
   NOM VARCHAR(20),
   PRENOM VARCHAR(20),
   ADrPOST VARCHAR(30),
   IdUSER INT , 
   FOREIGN KEY(IdUSER) REFERENCES COMPTE_UTILISATEUR(IdUSER) -- Cardinalité 1..1
);

SELECT * FROM MEMBRE  ORDER BY Iduser; 

INSERT INTO MEMBRE(EMAIlMEMBRE , MDP ,NOM ,PRENOM , ADrPOST , IdUSER) VALUES ('user1@gmail.com' , '12345' , 'nom1' ,'Prenom1' , 'ADR1' , 1) ; 
INSERT INTO MEMBRE(EMAIlMEMBRE , MDP ,NOM ,PRENOM , ADrPOST , IdUSER) VALUES ('user2@gamil.com' , '01234' , 'nom2' ,'Prenom2' , 'ADR2' , 2) ; 
INSERT INTO MEMBRE(EMAIlMEMBRE , MDP ,NOM ,PRENOM , ADrPOST , IdUSER) VALUES ('user3@gamil.com' , '01234' , 'nom3' ,'Prenom3' , 'ADR3' , 3) ; 
INSERT INTO MEMBRE(EMAIlMEMBRE , MDP ,NOM ,PRENOM , ADrPOST , IdUSER) VALUES ('user4@gamil.com' , '01234' , 'nom4' ,'Prenom4' , 'ADR4' , 4) ; 



SELECT * FROM MEMBRE ; 


CREATE TABLE ADHERENT 
(
    IdADHERENT INT PRIMARY KEY,
    EMAIlMEMBRE VARCHAR(50),
    MDP VARCHAR(20),
    NOM VARCHAR(50), 
    PRENOM VARCHAR(50),
    ADrPOST VARCHAR(50),
    IdUSER INT,
    FOREIGN KEY(IdUSER) REFERENCES COMPTE_UTILISATEUR(IdUSER) 

);


INSERT INTO ADHERENT(IdADHERENT , EMAIlMEMBRE , MDP , NOM ,PRENOM ,ADrPOST , IdUSER) VALUES(1 ,'adh1@gmail.com','12345','Adh1','PrenomAdh1' ,'ADR_ADH 1' , 5);
INSERT INTO ADHERENT(IdADHERENT , EMAIlMEMBRE , MDP , NOM ,PRENOM ,ADrPOST , IdUSER) VALUES(2 ,'adh2@gmail.com','12345','Adh2','PrenomAdh2' ,'ADR_ADH 2' , 6);

SELECT * FROM ADHERENT ; 

--------------------------------------------- Refuge : ---------------------------------------------------

DROP TABLE REFUGE ; 

CREATE TABLE REFUGE 
(
   EMAIlREF VARCHAR(50) PRIMARY KEY,
   NOM VARCHAR(50),
   NUMTEL INT,
   SECGEO VARCHAR(50),
   DATEOUV DATE,
   DATEFERME DATE,
   NBrREPAS INT,
   NBNUIT INT , 
   TEXTE VARCHAR(50),
   TYPePAYEMENT VARCHAR(20),
   PRIxNUITE DECIMAL
);



-- R1 : 

INSERT INTO REFUGE
VALUES (
'R1@gmail.com','R1', 0154788421, 'SEC1', TO_DATE('2022-01-01', 'YYYY-MM-DD'),TO_DATE('2022-01-20', 'YYYY-MM-DD'),100,40 , 'Bienvenue R1','CB',50);

-- R2 :
INSERT INTO REFUGE
VALUES (
'R2@gmail.com','R2', 0109788421, 'SEC2', TO_DATE('2022-02-10', 'YYYY-MM-DD'),TO_DATE('2022-02-25', 'YYYY-MM-DD'),80, 30 , 'Bienvenue R2','CB',60);

-- R3 :

INSERT INTO REFUGE
VALUES (
'R3@gmail.com','R3', 0154788001, 'SEC3', TO_DATE('2022-05-01', 'YYYY-MM-DD'),TO_DATE('2022-05-15', 'YYYY-MM-DD'),110, 25 , 'Bienvenue R3','CB',90);

-- R4 : 
INSERT INTO REFUGE
VALUES (
'R4@gmail.com','R4', 0154787801, 'SEC4', TO_DATE('2022-06-01', 'YYYY-MM-DD'),TO_DATE('2022-06-20', 'YYYY-MM-DD'),70 , 55 ,'Bienvenue R4','CB',70);



SELECT * FROM REFUGE ;




CREATE TABLE REPAS (
   TYPeRepas VARCHAR(20) PRIMARY KEY 
);


INSERT INTO REPAS 
VALUES('déjeuner');

INSERT INTO REPAS 
VALUES('souper');

INSERT INTO REPAS 
VALUES('dîner');

INSERT INTO REPAS
VALUES('casse-croûte');

SELECT * FROM REPAS ;



DROP TABLE PROPOSE_REPAS ; 

CREATE TABLE PROPOSE_REPAS 
(
   EMAIlREF VARCHAR(50) ,
   TYPeREPAS VARCHAR(20) , 
   PRIxREPAS DECIMAL , 
   
   PRIMARY KEY (EMAILREF, TYPeREPAS),
   
   FOREIGN KEY(EMAIlREF) REFERENCES REFUGE(EMAIlREF),
   FOREIGN KEY(TYPeREPAS) REFERENCES REPAS(TYPeREPAS)
);


INSERT INTO PROPOSE_REPAS VALUES ('R1@gmail.com' ,'déjeuner' , 20 );
INSERT INTO PROPOSE_REPAS VALUES ('R1@gmail.com' ,'souper' , 30 );
INSERT INTO PROPOSE_REPAS VALUES ('R1@gmail.com' ,'dîner' , 40 );
INSERT INTO PROPOSE_REPAS VALUES ('R1@gmail.com' ,'casse-croûte' , 15 );


INSERT INTO PROPOSE_REPAS VALUES ('R2@gmail.com' ,'déjeuner' , 15 );
INSERT INTO PROPOSE_REPAS VALUES ('R2@gmail.com' ,'souper' , 40 );
INSERT INTO PROPOSE_REPAS VALUES ('R2@gmail.com' ,'dîner' , 50 );
INSERT INTO PROPOSE_REPAS VALUES ('R2@gmail.com' ,'casse-croûte' , 15 );



INSERT INTO PROPOSE_REPAS VALUES ('R3@gmail.com' ,'déjeuner' , 10 );
INSERT INTO PROPOSE_REPAS VALUES ('R3@gmail.com' ,'souper' , 30 );
INSERT INTO PROPOSE_REPAS VALUES ('R3@gmail.com' ,'dîner' , 60 );
INSERT INTO PROPOSE_REPAS VALUES ('R3@gmail.com' ,'casse-croûte' , 5 );



INSERT INTO PROPOSE_REPAS VALUES ('R4@gmail.com' ,'déjeuner' , 3 );
INSERT INTO PROPOSE_REPAS VALUES ('R4@gmail.com' ,'souper' , 10 );
INSERT INTO PROPOSE_REPAS VALUES ('R4@gmail.com' ,'dîner' , 20 );
INSERT INTO PROPOSE_REPAS VALUES ('R4@gmail.com' ,'casse-croûte' , 2 );



SELECT * FROM PROPOSE_REPAS ORDER BY emailref ;





--- : Réservation  : 

DROP TABLE RESERVE_REPAS ; 

CREATE TABLE RESERVE_REPAS 
(
   IdRERSERvREF INT ,
   FOREIGN KEY(IdRERSERvREF) REFERENCES RESERVATION_REFUGE(IdReserv),
   TYPeREPAS  VARCHAR(20) ,
   FOREIGN KEY(TYPeREPAS) REFERENCES REPAS(TYPeREPAS),
   PRIMARY KEY (IdRERSERvREF, TYPeREPAS),
   NbREPAsRESERVE INT
);

INSERT INTO RESERVE_REPAS VALUES (1, 'déjeuner' , 10);
INSERT INTO RESERVE_REPAS VALUES (1, 'souper' , 10);
INSERT INTO RESERVE_REPAS VALUES (1, 'dîner' , 10);

INSERT INTO RESERVE_REPAS VALUES (2, 'déjeuner' , 15);
INSERT INTO RESERVE_REPAS VALUES (2, 'souper' , 5);

INSERT INTO RESERVE_REPAS VALUES (3, 'déjeuner' , 15);
INSERT INTO RESERVE_REPAS VALUES (3, 'souper' , 10);
INSERT INTO RESERVE_REPAS VALUES (3, 'dîner' , 15);




SELECT * FROM RESERVE_REPAS ; 
-- : 

DROP TABLE RESERVATION_REFUGE ;

CREATE TABLE RESERVATION_REFUGE (
   IdReserv INT PRIMARY KEY,
   DATE_RESERVATION DATE,
   HEURE INT,
   NBrNUITS INT,
   NBrREPAsRESERVE INT,
   PRIxTOTAL DECIMAL,
   EMAIlREF VARCHAR(50) , 
   FOREIGN KEY(EMAIlREF) REFERENCES REFUGE(EMAIlREF), -- Cardinalité 1..1
   IdUSER INT ,  
   FOREIGN KEY(IdUSER) REFERENCES COMPTE_UTILISATEUR(IdUSER) -- Cardinalité 1..1
);

INSERT INTO RESERVATION_REFUGE
VALUES(1,TO_DATE('2022-01-02', 'YYYY-MM-DD'),12, 15 ,30 , 0  , 'R1@gmail.com' , 1);

INSERT INTO RESERVATION_REFUGE
VALUES(2,TO_DATE('2022-01-10', 'YYYY-MM-DD'),12, 5 ,20 , 0  , 'R1@gmail.com' , 2);

INSERT INTO RESERVATION_REFUGE
VALUES(3,TO_DATE('2022-02-15', 'YYYY-MM-DD'),10, 20 ,40 , 0  , 'R2@gmail.com' , 3);


SELECT * FROM RESERVATION_REFUGE ; 






-- Calculer le prixb totale :

-- treme 1  : 

DROP VIEW TERM1 ;

CREATE VIEW TERME1 AS 
SELECT IdReserv , NBrNUITS*PRIxNUITE as terme1
FROM RESERVATION_REFUGE , REFUGE 
WHERE RESERVATION_REFUGE.emailref = REFUGE.EMAIlREF ; 


-- treme 2 : 

DROP VIEW nombreRepasReserveParType ; 

CREATE VIEW nombreRepasReserveParType AS  
SELECT RESERVATION_REFUGE.IdReserv , EMAIlREF , TYPeREPAS , NbREPAsRESERVE as nombreParType
FROM RESERVATION_REFUGE , RESERVE_REPAS 
WHERE RESERVATION_REFUGE.IdReserv = RESERVE_REPAS.IdRERSERvREF ;

SELECT * FROM nombreRepasReserveParType ;

DROP VIEW prixParType ; 

CREATE VIEW prixParType AS 
SELECT IdReserv ,  nombreParType*PRIxREPAS  AS PRIXTYPE 
FROM   nombreRepasReserveParType , PROPOSE_REPAS
WHERE nombreRepasReserveParType.EMAIlREF = PROPOSE_REPAS.EMAIlREF 
AND nombreRepasReserveParType.TYPeREPAS = PROPOSE_REPAS.TYPeREPAS ;

DROP VIEW TERME2 ; 

CREATE VIEW TERME2 AS 
SELECT IdReserv, SUM(PRIXTYPE) as terme2 FROM prixParType GROUP BY IdReserv ; 

-- CREATE VIEW prixTOT AS 
-- SELECT TERME1.IdReserv , terme2+terme1 as prixtotale  
-- FROM TERME1 , TERME2 
-- WHERE TERME1.IdReserv = TERME2.IdReserv;

-- SELECT * FROM prixTOT ; 

 


-- update prixtotale : 

-- UPDATE RESERVATION_REFUGE SET RESERVATION_REFUGE.PRIxTOTAL =prixTOT.prixtotale  WHERE  RESERVATION_REFUGE.IdReserv=prixTOT.IdReserv ;


UPDATE RESERVATION_REFUGE
SET RESERVATION_REFUGE.PRIXTOTAL = (
    SELECT terme2 + terme1 AS prixtotale
    FROM TERME1, TERME2
    WHERE TERME1.IdReserv = TERME2.IdReserv
    AND RESERVATION_REFUGE.IdReserv = TERME1.IdReserv
);


SELECT * FROM RESERVATION_REFUGE ; 


------------------------------------------- Formation : ------------------------------------------------------  

CREATE TABLE FORMATION (
   IdFORM INT,
   ANNEeFORM DATE,
   PRIMARY KEY (IdFORM, ANNEeFORM),
   NOM VARCHAR(50),
   DATeDEM DATE,
   DUREE INT,
   NBrPLACE INT,
   DescrFor VARCHAR(50),
   PRIX DECIMAL,
   NBrACTIVITE INT
);

INSERT INTO Formation VALUES (1 ,TO_DATE('2022-01-01', 'YYYY-MM-DD') ,'FOR1',TO_DATE('2022-01-01', 'YYYY-MM-DD') , 20 , 30 ,'Bienvenue Dans For1' ,    );


CREATE TABLE RESERVATION_FORMATION (
   IdReserv INT PRIMARY KEY,
   RANGRESERVFORM INT,
   IdUSER INT ,
   FOREIGN KEY(IdUSER)  REFERENCES COMPTE_UTILISATEUR(IdUSER) , -- Cardinalité 1..1
   IdFORM INT , 
   ANNEeFORM DATE ,  
   FOREIGN KEY(IdFORM , ANNEeFORM) REFERENCES FORMATION(IdFORM , ANNEeFORM)
);



CREATE TABLE ACTIVITE (
   NOmACTIVITE VARCHAR(50)
);


-- ProposeActivitéForm : 






---------------------------------------------------   MATERIEL : ---------------------------------------------------------------  


CREATE TABLE LOT (
   MARQUE VARCHAR(20),
   MODELE VARCHAR(20),
   ANNEeACHAT DATE,
   PRIMARY KEY(MARQUE, MODELE, ANNEeACHAT),
   NbPIECES INT,
   PRIxPERTE INT,
   TEXTeOPT VARCHAR(100),
   ANNEePEREMPTION DATE,
   CATEGORIE VARCHAR(50) ,  
   FOREIGN KEY(CATEGORIE) REFERENCES ARBRE(CATEGORIE) -- Cardinalité 1..1
);





CREATE TABLE LOCATION_MATERIEL 
(
   IdLoc INT PRIMARY KEY,
   IdADHERENT INT,
   NbPIECEsRESERV INT,
   DATeRECUP DATE,
   DATeRETOUR DATE, 
   NbPIECEsPERDUES INT ,
   MARQUE VARCHAR(20) , 
   MODELE VARCHAR(20) , 
   ANNEeACHAT DATE ,
   FOREIGN KEY(MARQUE , MODELE , ANNEeACHAT) REFERENCES Lot(MARQUE , MODELE , ANNEeACHAT) , 

   IdUSER INT , 
   
   FOREIGN KEY(IdUSER) REFERENCES COMPTE_UTILISATEUR(IdUSER) -- Cardinalité 1..1
);


CREATE TABLE ARBRE 
(
   CATEGORIE VARCHAR(30) PRIMARY KEY 
);

CREATE TABLE EstParentDe 
(
    sousCategorie1 VARCHAR(50) ,
    sousCategorie2 VARCHAR(50) ,
    PRIMARY KEY(sousCategorie1 , sousCategorie2) ,
    
    FOREIGN KEY(sousCategorie1) REFERENCES Arbre(CATEGORIE), 
    FOREIGN KEY(sousCategorie2) REFERENCES Arbre(CATEGORIE)

);


















